{"version":3,"sources":["components/TodoList/TodoUser.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModalList.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoUser","todo","getClickedDataFromTable","id","title","completed","className","type","onClick","TodoList","todos","map","TodoFilter","filterList","filterlistBySelectElem","useState","searchItem","setSearchItem","selectValue","setSelectValue","value","onChange","event","searchValue","target","placeholder","style","pointerEvents","length","Loader","TodoModalList","isModalClosed","user","name","email","more","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","clickedValue","users","setUsers","combineData","setCombineData","useEffect","isMounted","fetchData","a","userData","console","warn","updatedUsers","findData","find","App","setTodos","inputValue","setInputValue","setClickedValue","isModal","setIsModal","copyTodo","filter","toLowerCase","includes","search","modal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc1d6f9c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ninterface PropsTodoUser {\n  todo: Todo;\n  getClickedDataFromTable: (value: number) => void;\n}\n\nexport const TodoUser: React.FC<PropsTodoUser>\n= ({ todo, getClickedDataFromTable }) => {\n  const { id, title, completed } = todo;\n\n  const getClickedValue = (userId: number) => {\n    getClickedDataFromTable(userId);\n  };\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          {completed && <i className=\"fas fa-check\" />}\n        </span>\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        {completed ? (\n          <p className=\"has-text-success\">{title}</p>\n        ) : (\n          <p className=\"has-text-danger\">{title}</p>\n        )}\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => getClickedValue(id)}\n        >\n          <span className=\"icon\">\n            <i className=\"far fa-eye\" />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { TodoUser } from './TodoUser';\nimport { Todo } from '../../types/Todo';\n\ninterface PropsTodoList {\n  todos: Todo[],\n  getClickedDataFromTable: (value: number) => void;\n}\n\nexport const TodoList: React.FC<PropsTodoList>\n= ({ todos, getClickedDataFromTable }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <TodoUser\n            todo={todo}\n            key={todo.id}\n            getClickedDataFromTable={getClickedDataFromTable}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype FilterFunction = {\n  filterList: (search: string) => void;\n  filterlistBySelectElem: (search: string) => void;\n};\n\nexport const TodoFilter: React.FC<FilterFunction> = ({\n  filterList,\n  filterlistBySelectElem,\n}) => {\n  const [searchItem, setSearchItem] = useState('');\n  const [selectValue, setSelectValue] = useState('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = event.target.value;\n\n    setSearchItem(searchValue);\n    filterList(searchValue);\n  };\n\n  const handelSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const searchValue = event.target.value;\n\n    setSelectValue(searchValue);\n    filterlistBySelectElem(searchValue);\n  };\n\n  const resetInput = () => {\n    setSearchItem('');\n    filterList('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={handelSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchItem}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchItem.length > 0 && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  isModalClosed: (event: boolean) => void;\n  user: User;\n};\n\nexport const TodoModalList: React.FC<Props> = ({ isModalClosed, user }) => {\n  const { id, name, email } = user;\n\n  const closeModal = (value: boolean) => {\n    isModalClosed(value);\n  };\n\n  return (\n    <div className=\"modal-card\">\n      <header className=\"modal-card-head\">\n        <div\n          className=\"modal-card-title\n          has-text-weight-medium\"\n          data-cy=\"modal-header\"\n        >\n          Todo #\n          {id}\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"delete\"\n          data-cy=\"modal-close\"\n          onClick={() => closeModal(false)}\n          aria-label=\"Close Modal\"\n        />\n\n      </header>\n\n      <div className=\"modal-card-body\">\n        <p className=\"block\" data-cy=\"modal-title\">\n          {user.more[0].title}\n        </p>\n\n        <p className=\"block\" data-cy=\"modal-user\">\n          {!user.more[0].completed ? (\n            <strong className=\"has-text-danger\">Planned</strong>\n          ) : (\n            <strong className=\"has-text-success\">Done</strong>\n          )}\n          {' by '}\n          <a href={`mailto:${email}`}>{name}</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { TodoModalList } from './TodoModalList';\nimport { getUser } from '../../api';\n\ninterface PropsUser {\n  todos: Todo[];\n  isModalClosed: (event: boolean) => void;\n  clickedValue: number;\n}\n\nexport const TodoModal: React.FC<PropsUser> = (\n  { todos, isModalClosed, clickedValue },\n) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [combineData, setCombineData] = useState<User[]>([]);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchData = async () => {\n      try {\n        const userData = await getUser(clickedValue);\n\n        if (isMounted) {\n          setUsers([userData]);\n        }\n      } catch (error) {\n        console.warn(error); // eslint-disable-line no-console\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [clickedValue]);\n\n  useEffect(() => {\n    const updatedUsers = users.map((user) => {\n      const findData = todos.find((todo) => todo.id === clickedValue);\n\n      return {\n        ...user,\n        more: findData ? [findData] : [],\n      };\n    });\n\n    setCombineData(updatedUsers);\n  }, [users, todos, clickedValue]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {users.length === 0 ? (\n        <Loader />\n      ) : (\n        combineData.map((user) => (\n          <TodoModalList\n            user={user}\n            isModalClosed={isModalClosed}\n            key={user.id}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectValue, setSelectValue] = useState('');\n  const [clickedValue, setClickedValue] = useState(0);\n  const [isModal, setIsModal] = useState(false);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  let copyTodo = todos;\n\n  const filterList = (search: string) => {\n    setInputValue(search.toLowerCase());\n  };\n\n  if (inputValue.length > 0) {\n    copyTodo = todos.filter((todo) => todo.title.toLowerCase()\n      .includes(inputValue\n        .toLowerCase()));\n  }\n\n  if (selectValue.length > 0) {\n    switch (selectValue) {\n      case 'all':\n        setInputValue('');\n        setSelectValue('');\n        break;\n      case 'completed':\n        if (inputValue.length === 0) {\n          copyTodo = todos.filter((todo) => todo.completed);\n        } else {\n          copyTodo = todos.filter(\n            (todo) => todo.completed\n              && todo.title.toLowerCase()\n                .includes(inputValue.toLowerCase()),\n          );\n        }\n\n        break;\n\n      case 'active':\n        if (inputValue.length === 0) {\n          copyTodo = todos.filter((todo) => !todo.completed);\n        } else {\n          copyTodo = todos.filter(\n            (todo) => !todo.completed\n              && todo.title.toLowerCase()\n                .includes(inputValue.toLowerCase()),\n          );\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const filterlistBySelectElem = (search: string) => {\n    setSelectValue(search);\n  };\n\n  const getClickedDataFromTable = (value: number) => {\n    setClickedValue(value);\n  };\n\n  const isModalClosed = (modal: boolean) => {\n    setIsModal(modal);\n    setClickedValue(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterList={filterList}\n                filterlistBySelectElem={filterlistBySelectElem}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={copyTodo}\n                  getClickedDataFromTable={getClickedDataFromTable}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModal || clickedValue > 0 ? (\n        <TodoModal\n          todos={todos}\n          isModalClosed={isModalClosed}\n          clickedValue={clickedValue}\n        />\n      ) : null}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}